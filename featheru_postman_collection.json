{
	"info": {
		"_postman_id": "e7fb943a-bae9-4031-8905-23538fd7d5de",
		"name": "_FinalProject",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22044486"
	},
	"item": [
		{
			"name": "USERS - GetUsers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"jwt1\", pm.response.json()[0][\"id_token\"])",
							"pm.environment.set(\"jwt2\", pm.response.json()[1][\"id_token\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/users/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"boatid1\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"boatid2\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"boatid3\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalidjwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 406",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"406 status code\", function () {",
							"    pm.response.to.have.status(406);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{validowner}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "'text/html'",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Get Boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - invalid - Get Boat 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalidjwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Get Boat 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{invalidboat}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalidboat}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt2 -> jwt1 - Get Boat 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS ALL - jwt1 - 200 Pagination 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"allboatspagination\", pm.response.json()[\"next\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS ALL - jwt1 - 200 Pagination 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{allboatspagination}}",
					"host": [
						"{{allboatspagination}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS ALL - jwt1 - 200 Big Pagination",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/?limit=200&offset=0",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					],
					"query": [
						{
							"key": "limit",
							"value": "200"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt2->jwt1 - Del Boat 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - invalid->jwt1 - Del Boat 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalidjwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Del Boat 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Del Boat 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - New Boat 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"boatid1\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch\",\n \"type\": \"Catamaran\",\n \"length\": 28\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Edit Boat 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch Patched\",\n \"type\": \"Catamaran Patched\",\n \"length\": 99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Edit Boat 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch Invalid\",\n \"type\": \"Catamaran Invalid\",\n \"length\": 99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{invalidboat}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalidboat}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt2 -> jwt1 - Edit Boat 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch NO\",\n \"type\": \"Catamaran NO\",\n \"length\": 99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - invalid - Edit Boat 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalidjwt}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch Invalid\",\n \"type\": \"Catamaran Invalid\",\n \"length\": 99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Edit Boat 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"nada\": \"Bad Patch\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Edit Boat 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch Putted\",\n \"type\": \"Catamaran Putted\",\n \"length\": 99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Edit Boat 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalidjwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch Putted\",\n \"type\": \"Catamaran Putted\",\n \"length\": 99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Edit Boat 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch NO PUT\",\n \"length\": 9999\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt1 - Edit Boat 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch Putted\",\n \"type\": \"Catamaran Putted\",\n \"length\": 99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{invalidboat}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalidboat}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "BOATS - jwt2 -> jwt1 - Edit Boat 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"name\": \"Sea Witch Putted\",\n \"type\": \"Catamaran Putted\",\n \"length\": 99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - New Load 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"loadid1\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 100,\n \"item\": \"Boxes of Apples\",\n \"creation_date\": \"2023-05-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - New Load 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"loadid2\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 100,\n \"item\": \"Boxes of Apples\",\n \"creation_date\": \"2023-05-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - New Load 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"loadid3\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 100,\n \"item\": \"Boxes of Apples\",\n \"creation_date\": \"2023-05-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - New Load 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 100,\n \"item\": \"Boxes of Apples\",\n \"creation_date\": \"2023-05-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - New Load 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 100,\n \"item\": \"Boxes of Apples\",\n \"creation_date\": \"2023-05-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - New Load 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 100,\n \"item\": \"Boxes of Apples\",\n \"creation_date\": \"2023-05-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - New Load 400 Invalid Date",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 100,\n \"item\": \"Invalid Date\",\n \"creation_date\": \"20-05-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Get Load 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Get Load 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{invalidload}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{invalidload}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS ALL - none - 200 Pagination 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.environment.set(\"allloadspagination\", pm.response.json()[\"next\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS ALL - none - 200 Pagination 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{allloadspagination}}",
					"host": [
						"{{allloadspagination}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Del Load 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Del Load 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Del Load 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{invalidIDtype}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{invalidIDtype}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - New Load 201 (Duplicate)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"loadid1\", pm.response.json()[\"id\"]);",
							"",
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 100,\n \"item\": \"Boxes of Apples\",\n \"creation_date\": \"2023-05-01\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Edit Load 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 168,\n \"item\": \"Boxes of Apples PUT\",\n \"creation_date\": \"2023-05-31\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Edit Load 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 168,\n \"item\": \"Boxes of Apples PUT\",\n \"creation_date\": \"2023-05-31\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{invalidload}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{invalidload}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Edit Load 201",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"201 status code\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 168,\n \"item\": \"Boxes of Apples PATCH\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Edit Load 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 168,\n \"item\": \"Boxes of Apples PATCH\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{invalidload}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{invalidload}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - none - Load on Boat 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - invalid - Load on Boat 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalidjwt}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Load on Boat 400 boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{invalidIDtype}}}}/loads/{{loadid1}}}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalidIDtype}}}}",
						"loads",
						"{{loadid1}}}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Load on Boat 400 load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"400 status code\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{invalidIDtype}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{invalidIDtype}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Load on Boat 404 boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{invalidboat}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalidboat}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Load on Boat 404 load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{invalidload}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{invalidload}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Load on Boat 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt2 -> jwt1 - Load on Boat 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - jwt2->jwt1 - Del Load 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - jwt2->jwt1 - Edit Load 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 168,\n \"item\": \"Boxes of Apples PUT\",\n \"creation_date\": \"2023-05-31\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - jwt2->jwt1 - Edit Load 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \n \"volume\": 168,\n \"item\": \"Boxes of Apples PATCH\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - invalid - Del on Boat 401",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"401 status code\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{invalidjwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt2 -> jwt1 - Del on Boat 403",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"403 status code\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Del on Boat 404 boat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{invalidboat}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{invalidboat}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Del on Boat 404 load",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404 status code\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt2}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{invalidload}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{invalidload}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 -Get Boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Get Load 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Del on Boat 204",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 -Get Boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOADS - none - Get Load 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Load on Boat 204 (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Load on Boat 204 (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Load on Boat 204 (3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid3}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 -Get Boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 3 loads on boat test",
							"pm.test(\"3 Loads on JWT1 Boat\", function(){",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(3);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Del on Boat 204 (1)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 -Get Boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 2 loads on boat test",
							"pm.test(\"3 Loads on JWT1 Boat\", function(){",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(2);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Del on Boat 204 (2)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid2}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 -Get Boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 1 loads on boat test",
							"pm.test(\"1 Loads on JWT1 Boat\", function(){",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(1);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 - Del on Boat 204 (3)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"204 status code\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}/loads/{{loadid3}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}",
						"loads",
						"{{loadid3}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "B&L - jwt1 -Get Boat 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"200 status code\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// 1 loads on boat test",
							"pm.test(\"0 Loads on JWT1 Boat\", function(){",
							"    pm.expect(pm.response.json()[\"loads\"].length).to.equal(0);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/{{boatid1}}",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						"{{boatid1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "405 users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {",
							"    pm.response.to.have.status(405);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{app_url}}/users/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"users",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "405 boats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"405 status code\", function () {",
							"    pm.response.to.have.status(405);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt1}}",
							"type": "string"
						}
					]
				},
				"method": "COPY",
				"header": [],
				"url": {
					"raw": "{{app_url}}/boats/",
					"host": [
						"{{app_url}}"
					],
					"path": [
						"boats",
						""
					]
				}
			},
			"response": []
		}
	]
}